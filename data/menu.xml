<!--suppress XmlUnboundNsPrefix -->

<!-- the following types are allowed:
	<screen [module="mod"] [screen="classname"]>[arguments]</screen>
		executes Screen called "classname" from module "Screen.mod"
		if no module is given, Screen must be globally available.
		if no screen is given, module is used as screen class name.
		arguments must be comma seperated (will be fed to eval), and can
			use stuff from module
		(of course you must specify at least one of module, screen.)
	<setup id="id" />
		opens a setup with specified id
	<code> .. code .. </code>
		"exec"s code
-->

<!-- Main Menu -->
<menu text="Mainmenu" title="Main Menu">
	<id val="mainmenu" />
		<item weight="0" level="1" text="Blue Panel" entryID="BluePanel_selection">
<code>
from OPENDROID.BluePanel import BluePanel
self.session.open(BluePanel)
</code>
		</item>	
		<item weight="0" level="1" text="Green Panel" entryID="GreenPanel_selection">
<code>
from OPENDROID.GreenPanel import GreenPanel
self.session.open(GreenPanel)
</code>
		</item>
	<menu weight="1" level="0" text="Setup" flushConfigOnClose="1" entryID="setup_selection" >
	<item weight="15" level="1" text="VCR scart" entryID="scart_switch" conditional="config.usage.show_vcr_scart.value" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
		<id val="setup" />

		<!-- Menu / Settings / Video Menu -->
		<menu weight="0" level="0" text="Video Settings" entryID="video_menu">
			<id val="video_menu" />
			<item weight="0" level="0" text="Video settings" entryID="video_setup"><screen module="VideoMode" screen="VideoSetup" /></item>
		</menu>

		<!-- Menu / Settings / Audio Menu -->
		<menu weight="5" level="1" text="Audio Settings" entryID="audio_menu">
			<id val="audio_menu" />
			<item weight="0" level="1" text="Basic settings" entryID="audio_setup"><screen module="VideoMode" screen="AudioSetup" /></item>
			<item weight="10" level="2" entryID="subtitle_setup"><setup id="subtitlesetup" /></item>
			<item weight="15" level="1" entryID="autolanguage_setup"><setup id="autolanguagesetup" /></item>
		</menu>
		<!-- Menu / Settings / Service Searching -->
		<menu weight="5" level="0" text="Service searching" entryID="service_searching_selection">
			<id val="scan" />
			<item weight="1" text="Tuner setup" entryID="tuner_setup" requires="ClientModeDisabled"><screen module="Satconfig" screen="NimSelection"/></item>
			<item weight="2" text="Tuner setup" entryID="client_mode" requires="ClientModeEnabled"><screen module="ClientMode" screen="ClientModeScreen"/></item>
			<item weight="20" text="Automatic scan" entryID="auto_scan" conditional="nimmanager.somethingConnected()" requires="ClientModeDisabled"><screen module="ScanSetup" screen="ScanSimple"/></item>
			<item weight="30" text="Manual scan" entryID="manual_scan" conditional="nimmanager.somethingConnected()" requires="ClientModeDisabled"><screen module="ScanSetup"/></item>
			<item weight="100" text="Fallback configuration" entryID="fallback_mode" requires="ClientModeDisabled"><screen  module="FallbackTunerSetup" screen="FallbackTunerSetup"/></item>
		</menu>

		<!-- Menu / Settings / GUI -->
		<!-- was: Menu / Settings / System -->
		<menu weight="15" level="0" text="User Interface" entryID="system_selection">
			<id val="system" />
			<!-- Menu / Settings / GUI / Display-->
			<item weight="0" level="0" entryID="user_interface"><setup id="userinterface" /></item>
			<item weight="5" level="0" entryID="channelselection_setup"><setup id="channelselection" /></item>
			<item weight="10" level="0" entryID="usage_setup"><setup id="usage" /></item>
			<item weight="15" level="0" entryID="remote_setup"><setup id="remotesetup"/></item>
			<item weight="25" level="0" text="Skin Setup" entryID="skin_setup"><screen module="SkinSelector" screen="SkinSelector"/></item>
		<menu weight="20" level="0" text="Front Panel Display" entryID="display_selection" requires="Display">
			<id val="display" />
			<item weight="0" level="0" entryID="display_setup"><setup id="display" /></item>
			<item requires="LCDSKINSetup" level="1" text="VFD Skin Default" entryID="vfd_skin"><screen module="VfdSkinSelector" screen="VFDSkinSelector"/></item>
			<item weight="5" level="2" text="LCD Skin Setup" entryID="lcd_skin_setup" requires="LCDSKINSetup"><screen module="SkinSelector" screen="LcdSkinSelector"/></item>
		</menu>
			<!-- Menu / Settings / System / Extended System / OSD settings -->
		<menu weight="30" level="1" text="Extended GUI" entryID="osd_setup">
				<id val="osd_menu" />
				<item weight="10" level="1" text="OSD Position" entryID="osdsetup" requires="CanChangeOsdPosition"><screen module="UserInterfacePositioner" screen="UserInterfacePositioner2"/></item>
				<!-- <item weight="10" level="0" entryID="dvdplayer_setup"><setup id="dvdplayer" /></item> -->
				<item weight="20" level="2" text="Button setup" entryID="buttonsetup_setup"><screen module="ButtonSetup" screen="ButtonSetup"/></item>
				<item weight="30" level="1" text="Input devices" entryID="input_device_setup"><screen module="InputDeviceSetup" screen="InputDeviceSelection" /></item>
				<item weight="80" level="1" text="Remote Control Code" entryID="remotecode" requires="RemoteCode">
					<code>
from Plugins.SystemPlugins.RemoteControlCode.plugin import RemoteControlCode
self.session.open(RemoteControlCode)
</code>
				</item>
				<item weight="40" level="1" text="Keyboard" entryID="keyboard"><setup id="keyboard" /></item>
				<item weight="50" level="2" text="OSD 3D Setup" entryID="osd3dsetup" requires="CanChange3DOsd"><screen module="UserInterfacePositioner" screen="OSD3DSetupScreen"/></item>
			        <item weight="70" level="0" text="Language" entryID="locale"><screen module="LocaleSelection" /></item>
                                <item weight="70" level="0" entryID="specialfeatures_menu"><setup id="specialfeatures" /></item>
				<!-- <item weight="50" level="2" text="OSD 3D Setup" entryID="osd3dsetup" requires="CanChange3DOsd"><screen module="UserInterfacePositioner" screen="OSD3DSetupScreen"/></item> -->
			</menu>
		</menu>

		<!-- Menu / Settings / Recordings -->
		<menu weight="20" level="1" text="Recording &amp; Timeshift" entryID="rec_setup">
			<id val="rec" />
			<item weight="10" level="0" text="Timeshift settings" entryID="timshift_setup"><screen module="Timeshift" screen="TimeshiftSettings" /></item>
			<item weight="15" level="0" text="Recording settings" entryID="recording_setup"><screen module="Recording" screen="RecordingSettings" /></item>
			<item weight="16" level="0" text="VOD settings" entryID="vod_setup"><setup id="vodsetup"/></item>
			<item weight="20" level="0" text="HDMI-IN Recording settings" entryID="hdmirecord_setup" requires="HDMIin"><setup id="HDMIRecord"/></item>
		</menu>

		<!-- Menu / Settings / EPG -->
		<menu weight="20" level="2" text="EPG" entryID="epg_menu">
			<id val="epg" />
			<!-- Menu / Settings / System / Extended System / EPG / Load Save-->
			<item weight="110" level="2" entryID="setup_epgmulti"><setup id="epgmulti" /></item>
			<item weight="115" level="2" entryID="setup_epgenhanced"><setup id="epgenhanced" /></item>
			<item weight="120" level="2" entryID="setup_epginfobar"><setup id="epginfobar" /></item>
			<item weight="125" level="2" entryID="setup_epginfobargraphical"><setup id="epginfobargraphical" /></item>
			<item weight="130" level="2" entryID="setup_epggraphical"><setup id="epggraphical" /></item>
			<item weight="135" level="2" entryID="setup_epgvertical"><setup id="epgvertical" /></item>
			<menu weight="200" level="2" text="Load/Save/Delete" entryID="epgloadsave_menu">
				<id val="epgloadsave_menu" />
				<item weight="0" level="0" entryID="loadepgcache" text="Load EPG">
					<code>
from Components.EpgLoadSave import EpgLoadMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.load()
self.session.openWithCallback(msgClosed, EpgLoadMsg)
</code>
				</item>
				<item weight="50" level="0" entryID="saveepgcache" text="Save EPG">
					<code>
from Components.EpgLoadSave import EpgSaveMsg
def msgClosed(ret):
	if ret:
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.save()
self.session.openWithCallback(msgClosed, EpgSaveMsg)
</code>
						</item>
						<item level="0" entryID="deleteepgcache" text="Delete EPG">
<code>
from Components.EpgLoadSave import EpgDeleteMsg
def msgClosed(ret):
	if ret:
		import os
		from Components.config import config
		if os.path.exists(config.misc.epgcache_filename.value):
			os.remove(config.misc.epgcache_filename.value)
		from enigma import eEPGCache
		epgcache = eEPGCache.getInstance()
		epgcache.flushEPG()
self.session.openWithCallback(msgClosed, EpgDeleteMsg)
</code>
				</item>
			</menu>
			<item weight="300" level="0" entryID="epg_setup"><setup id="epgsettings" /></item>
		</menu>

		<!-- Menu / Settings / Common interface -->
		<menu weight="30" level="1" text="Common interface" entryID="cam_setup" requires="CommonInterface">
			<id val="cam" />
			<item weight="0" level="1" text="Basic settings" entryID="ci_setup"><screen module="Ci" screen="CISetup" /></item>
			<item weight="1" level="1" text="Common Interface" entryID="ci_setup"><screen module="Ci" screen="CiSelection" /></item>
			<item weight="5" level="1" text="CIHelper Setup" entryID="ci_setup" requires="CIHelper"><screen module="Ci" screen="CIHelper" /></item>
		</menu>
		<item weight="40" level="0" text="Parental control" entryID="parental_setup"><screen module="ParentalControlSetup" screen="ParentalControlSetup" /></item>


		<!-- Menu / Settings / System -->
		<!-- was: Menu / Settings / System / Extended System -->
		<!-- <menu weight="95" level="0" text="Extended System" entryID="extended_selection"> -->
		<menu weight="95" level="0" text="System" entryID="extended_selection">
			<id val="extended" />
			<!-- Menu / Settings / System / Storage devices -->
			<menu weight="45" level="0" text="Storage devices" entryID="hardisk_selection" requires="Harddisk">
				<id val="harddisk" />
				<item weight="0" level="1" entryID="harddisk_setup"><setup id="harddisk"/></item>
				<item weight="5" level="0" text="Initialization" entryID="harddisk_init"><screen module="HarddiskSetup" screen="HarddiskSelection"/></item>
				<item weight="10" level="0" text="Filesystem Check" entryID="harddisk_check"><screen module="HarddiskSetup" screen="HarddiskFsckSelection"/></item>
				<item weight="3" level="0" text="USB Disk Format" entryID="usbdisk_init">
<code>
from OPENDROID.MountManager import UsbFormat
self.session.open(UsbFormat)
</code>
				</item>
				<item weight="15" level="0" text="Convert ext3 filesystem to ext4" entryID="harddisk_convert" requires="ext4"><screen module="HarddiskSetup" screen="HarddiskConvertExt4Selection"/></item>
			</menu>

			<!-- Menu / Settings / System / Network -->
			<menu entryID="network_menu" level="0" text="Network" weight="50">
				<id val="network" />
				<item entryID="device_setup" level="0" text="Device Settings" weight="0"><screen module="NetworkSetup" screen="NetworkAdapterSelection" /></item>
				<item entryID="netmounts_setup" level="1" text="Mounts Settings" weight="5"><screen module="NetworkSetup" screen="NetworkMountsMenu" /></item>
				<item entryID="password_setup" level="2" text="Password Settings" weight="8"><screen module="NetworkSetup" screen="NetworkPassword" /></item>
				<item entryID="netsatpi_setup" level="2" text="SATPI Settings" weight="10"><screen module="NetworkSetup" screen="NetworkSATPI" /></item>
				<item entryID="netsmba_setup" level="2" text="CIFS/Samba Settings" weight="15"><screen module="NetworkSetup" screen="NetworkSamba" /></item>
				<item entryID="netftp_setup" level="2" text="FTP Settings" weight="20"><screen module="NetworkSetup" screen="NetworkFtp" /></item>
				<item entryID="Inadyn_setup" level="2" text="Inadyn Settings" weight="25"><screen module="NetworkSetup" screen="NetworkInadyn" /></item>
				<item entryID="minidlna_setup" level="2" text="MiniDLNA Settings" weight="30"><screen module="NetworkSetup" screen="NetworkMiniDLNA" /></item>
				<item entryID="netnfs_setup" level="2" text="NFS Settings" weight="35"><screen module="NetworkSetup" screen="NetworkNfs" /></item>
				<item entryID="netvpn_setup" level="2" text="OpenVPN Settings" weight="40"><screen module="NetworkSetup" screen="NetworkOpenvpn" /></item>
				<item entryID="netsabnzbd_setup" level="2" text="SABnzbd Settings" weight="45"><screen module="NetworkSetup" screen="NetworkSABnzbd" /></item>
				<item entryID="nettelnet_setup" level="2" text="Telnet Settings" weight="50"><screen module="NetworkSetup" screen="NetworkTelnet" /></item>
				<item entryID="netushare_setup" level="2" text="uShare Settings" weight="55"><screen module="NetworkSetup" screen="NetworkuShare" /></item>
				<item entryID="netafp_setup" level="2" text="AFP Settings" weight="60"><screen module="NetworkSetup" screen="NetworkAfp" /></item>
			</menu>
			<item entryID="hdmicec" level="0" text="HDMI-CEC Settings" weight="55" requires="HDMICEC"><screen module="HDMICEC" screen="HDMICECSetup" /></item>
			<item entryID="time_setup" level="0" text="Time Settings" weight="60"><screen module="Time" screen="Time" /></item>
			<item entryID="logs_setup" level="0" text="Logs Settings" weight="70"><setup id="Logs" /></item>
			<item entryID="rfmod_setup" level="1" text="RF Output Settings" weight="80" requires="RfModulator"><setup id="RFModulator" /></item>
			<item entryID="factory_reset" level="0" text="Factory Reset" weight="99"><screen module="FactoryReset" screen="FactoryReset" /></item>
		</menu>
	</menu>

	<!-- Menu / Information -->
	<menu weight="10" level="0" text="Information" entryID="info_screen">
		<id val="information" />
		<item weight="5" level="0" text="About" entryID="about_screen"><screen module="About" screen="About"/></item>
		<item weight="7" level="0" text="Devices" entryID="device_screen"><screen module="About" screen="Devices"/></item>
		<item weight="10" level="0" text="Memory" entryID="device_screen"><screen module="About" screen="SystemMemoryInfo"/></item>
		<item weight="15" level="0" text="Network" entryID="device_screen"><screen module="About" screen="SystemNetworkInfo"/></item>
		<item weight="20" level="1" text="Service" entryID="service_info_screen"><screen module="ServiceInfo" screen="ServiceInfo"/></item>
		<item weight="6" level="0" text="CommitInfo" entryID="CommitInfo_info_screen"><screen module="About" screen="CommitInfo"/></item>
                <item level="2" text="Streaming clients info" entryID="streaming_clients_info_screen"><screen module="StreamingClientsInfo" screen="StreamingClientsInfo"/></item>
	</menu>

	<!-- Menu / Timer -->
	<menu weight="15" level="0" text="Timers" entryID="timer_menu">
		<id val="timermenu" />
		<item weight="0" level="0" text="Timers" entryID="timer_edit"><screen module="TimerEdit" screen="TimerEditList" /></item>
		<item weight="5" level="0" text="PowerTimers" entryID="powertimer_edit"><screen module="PowerTimerEdit" screen="PowerTimerEditList" /></item>
                <item weight="20" level="0" text="Sleep Timer" requires="DeepstandbySupport" entryID="sleep"><screen module="SleepTimerEdit" screen="SleepTimerEdit" /></item>
		<item weight="10" level="0" text="CronTimers" entryID="crontimer_edit"><screen module="CronTimer" screen="CronTimers" /></item>
	</menu>
	<!-- Menu / VCR -->
	<item weight="20" level="1" text="VCR scart" entryID="scart_switch" configcondition="config.usage.show_vcr_scart" requires="ScartSwitch"><code>self.session.scart.VCRSbChanged(3)</code></item>
	<item weight="10" level="1" text="Plugins" entryID="plugin_selection"><screen module="PluginBrowser" screen="PluginBrowser" /></item>
	<!-- Menu / Standby Restart -->
	<menu entryID="standby_restart_list" level="0" text="Standby / Restart" weight="99">
		<id val="shutdown" />
		<item entryID="deep_standby" level="0" text="Deep Standby" weight="0" requires="DeepstandbySupport">
			<code>
from Screens.MessageBox import MessageBox
from Screens.Standby import QUIT_SHUTDOWN, TryQuitMainloop
recordings = self.session.nav.getRecordingsCheckBeforeActivateDeepStandby()
if recordings:
	self.session.openWithCallback(self.gotoStandby, MessageBox, _("Recording(s) are in progress or coming up in few seconds!\nEntering standby, after recording the box will shutdown."), type=MessageBox.TYPE_INFO, close_on_any_key=True, timeout=10)
else:
	self.session.open(TryQuitMainloop, QUIT_SHUTDOWN)
			</code>
		</item>
		<item entryID="shutdown" level="0" text="Shutdown" weight="5" requires="!DeepstandbySupport"><screen module="Standby" screen="TryQuitMainloop">1</screen></item>
		<item entryID="multiboot" level="0" text="MultiBoot Manager" weight="6" requires="canMultiBoot"><screen module="MultiBootManager" screen="MultiBootManager" /></item>
		<!--item entryID="SDswap" level="0" text="SDroot" weight="7" requires="HasSDswap"><screen module="SDswap" screen="SDswap">1</screen></item-->
		<item entryID="wol_standby" level="0" text="WOL Standby" weight="10" requires="GBWOL">
			<code>
from Screens.MessageBox import MessageBox
from Screens.Standby import QUIT_WOLSHUTDOWN, TryQuitMainloop
recordings = self.session.nav.getRecordingsCheckBeforeActivateDeepStandby()
if recordings:
	self.session.openWithCallback(self.gotoStandby, MessageBox, _("Recording(s) are in progress or coming up in few seconds!\nEntering standby, after recording the box will shutdown."), type=MessageBox.TYPE_INFO, close_on_any_key=True, timeout=10)
else:
	self.session.open(TryQuitMainloop, QUIT_WOLSHUTDOWN)
			</code>
		</item>
		<item entryID="standby" level="0" text="Standby" weight="15"><screen module="Standby" screen="Standby" /></item>
		<item entryID="sleep" level="0" text="Sleep Timer" weight="20" requires="DeepstandbySupport"><screen module="SleepTimerEdit" screen="SleepTimerEdit" /></item>
		<item entryID="restart" level="0" text="Restart" weight="25"><screen module="Standby" screen="TryQuitMainloop">2</screen></item>
		<item entryID="restart_enigma" level="0" text="Restart enigma2" weight="30"><screen module="Standby" screen="TryQuitMainloop">3</screen></item>
		<item entryID="maintenance_mode" level="0" text="Recovery Mode" weight="24" requires="RecoveryMode"><screen module="Standby" screen="TryQuitMainloop">16</screen></item>
		<item entryID="dual_mode" level="0" text="Dual Mode" weight="24" requires="canDualBoot"><screen module="Standby" screen="DualMode" /></item>
	</menu>

</menu>
